{"ast":null,"code":"var _jsxFileName = \"C:\\\\laragon\\\\www\\\\bjak\\\\src\\\\Home.js\";\nimport React from 'react';\nimport { Link } from 'react-router-dom';\nimport Slider from \"react-slick\";\nimport Container from '@material-ui/core/Container';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Card from '@material-ui/core/Card';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardActionArea from '@material-ui/core/CardActionArea';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport Button from '@material-ui/core/Button';\nimport { Typography, Breadcrumbs, Paper } from '@material-ui/core';\n\nclass Home extends React.Component {\n  constructor(props) {\n    super(props);\n    this.queryPage = 2;\n    this.fetch = true;\n    this.state = {\n      lists: []\n    };\n  }\n\n  componentDidMount() {\n    fetch('https://cdn-discover.hooq.tv/v1.2/discover/feed?region=ID&page=1&perPage=20').then(res => res.json()).then(data => {\n      this.setState({\n        lists: data.data\n      });\n    });\n    window.addEventListener('scroll', () => {\n      if (window.innerHeight + window.scrollY >= document.body.offsetHeight) {\n        if (this.fetch) {\n          fetch('https://cdn-discover.hooq.tv/v1.2/discover/feed?region=ID&page=' + this.queryPage + '&perPage=20').then(res => res.json()).then(data => {\n            if (data.data.length !== 0) {\n              this.setState({\n                lists: [...this.state.lists, ...data.data]\n              });\n            } else {\n              this.fetch = false;\n            }\n          });\n          this.queryPage++;\n        }\n      }\n    });\n  }\n\n  componentWillUnmount() {\n    this.fetch = false;\n  }\n\n  render() {\n    const lists = this.state.lists;\n    return React.createElement(React.Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }, React.createElement(CssBaseline, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }), React.createElement(Paper, {\n      elevation: 0,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }, React.createElement(Breadcrumbs, {\n      separator: \"/\",\n      \"aria-label\": \"breadcrumb\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }, React.createElement(Typography, {\n      color: \"textPrimary\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }, \"Home\"))), lists.map(res => {\n      if (res.type === \"Multi-Title-Manual-Curation\") {\n        return React.createElement(\"section\", {\n          key: res.row_id,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 69\n          },\n          __self: this\n        }, React.createElement(Container, {\n          maxWidth: \"lg\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 70\n          },\n          __self: this\n        }, React.createElement(Typography, {\n          className: \"text-center m-t-10 m-b-10\",\n          variant: \"h5\",\n          color: \"primary\",\n          component: \"h2\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 71\n          },\n          __self: this\n        }, res.row_name), React.createElement(ChildList, {\n          key: res.id,\n          list: res,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 74\n          },\n          __self: this\n        })));\n      } else {\n        return null;\n      }\n    }));\n  }\n\n}\n\nclass ChildList extends React.Component {\n  render() {\n    const settings = {\n      dots: false,\n      infinite: false,\n      speed: 500,\n      slidesToShow: 4,\n      slidesToScroll: 4,\n      initialSlide: 0,\n      lazyLoad: true,\n      responsive: [{\n        breakpoint: 1100,\n        settings: {\n          slidesToShow: 3,\n          slidesToScroll: 3,\n          infinite: true,\n          dots: true\n        }\n      }, {\n        breakpoint: 1024,\n        settings: {\n          slidesToShow: 2,\n          slidesToScroll: 2,\n          infinite: true,\n          dots: true\n        }\n      }, {\n        breakpoint: 900,\n        settings: {\n          slidesToShow: 1,\n          slidesToScroll: 1\n        }\n      }]\n    };\n    return React.createElement(Slider, Object.assign({}, settings, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128\n      },\n      __self: this\n    }), this.props.list.data.map(res => {\n      return React.createElement(\"div\", {\n        className: \"post-container\",\n        key: res.id,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 132\n        },\n        __self: this\n      }, React.createElement(Card, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 133\n        },\n        __self: this\n      }, React.createElement(CardActionArea, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 134\n        },\n        __self: this\n      }, React.createElement(GrandChildList, {\n        link: res.id,\n        key: res.id,\n        list: res.images,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 135\n        },\n        __self: this\n      })), React.createElement(CardActions, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 137\n        },\n        __self: this\n      }, React.createElement(Button, {\n        size: \"small\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 138\n        },\n        __self: this\n      }, React.createElement(Link, {\n        to: {\n          pathname: \"/detail/\".concat(res.id)\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 139\n        },\n        __self: this\n      }, res.title)))));\n    }));\n  }\n\n}\n\nclass GrandChildList extends React.Component {\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 155\n      },\n      __self: this\n    }, React.createElement(Link, {\n      className: \"image\",\n      to: {\n        pathname: \"/detail/\".concat(this.props.link)\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 156\n      },\n      __self: this\n    }, this.props.list.map(res => {\n      if (res.type === \"POSTER\") {\n        return React.createElement(CardMedia, {\n          key: res.id,\n          image: res.url,\n          title: res.title,\n          className: \"card-image\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 164\n          },\n          __self: this\n        });\n      } else {\n        return null;\n      }\n    })));\n  }\n\n}\n\nexport default Home;","map":{"version":3,"sources":["C:\\laragon\\www\\bjak\\src\\Home.js"],"names":["React","Link","Slider","Container","CssBaseline","Card","CardActions","CardActionArea","CardMedia","Button","Typography","Breadcrumbs","Paper","Home","Component","constructor","props","queryPage","fetch","state","lists","componentDidMount","then","res","json","data","setState","window","addEventListener","innerHeight","scrollY","document","body","offsetHeight","length","componentWillUnmount","render","map","type","row_id","row_name","id","ChildList","settings","dots","infinite","speed","slidesToShow","slidesToScroll","initialSlide","lazyLoad","responsive","breakpoint","list","images","pathname","title","GrandChildList","link","url"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { Link } from 'react-router-dom';\nimport Slider from \"react-slick\";\nimport Container from '@material-ui/core/Container';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Card from '@material-ui/core/Card';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardActionArea from '@material-ui/core/CardActionArea';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport Button from '@material-ui/core/Button';\nimport { Typography, Breadcrumbs, Paper } from '@material-ui/core';\n\n\nclass Home extends React.Component {\n  queryPage = 2;\n  fetch = true;\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      lists: []\n    };\n  }\n\n  componentDidMount() {\n    fetch('https://cdn-discover.hooq.tv/v1.2/discover/feed?region=ID&page=1&perPage=20')\n      .then(res => res.json())\n      .then(data => {\n        this.setState({ lists: data.data })\n      });\n\n    window.addEventListener('scroll', () => {\n      if ((window.innerHeight + window.scrollY) >= document.body.offsetHeight) {\n        if (this.fetch) {\n          fetch('https://cdn-discover.hooq.tv/v1.2/discover/feed?region=ID&page=' + this.queryPage + '&perPage=20')\n            .then(res => res.json())\n            .then(data => {\n              if (data.data.length !== 0) {\n                this.setState({ lists: [...this.state.lists, ...data.data] })\n              } else {\n                this.fetch = false;\n              }\n            });\n          this.queryPage++;\n        }\n      }\n    });\n  }\n\n  componentWillUnmount() {\n    this.fetch = false;\n  }\n\n  render() {\n    const { lists } = this.state;\n    return (\n      <React.Fragment>\n        <CssBaseline />\n        <Paper elevation={0} >\n          <Breadcrumbs separator='/' aria-label=\"breadcrumb\">\n            <Typography color=\"textPrimary\">Home</Typography>\n          </Breadcrumbs>\n        </Paper>\n        {/*<Container maxWidth=\"lg\">*/}\n        {\n          lists.map(res => {\n            if (res.type === \"Multi-Title-Manual-Curation\") {\n              return (\n                <section key={res.row_id}>\n                  <Container maxWidth=\"lg\">\n                    <Typography className=\"text-center m-t-10 m-b-10\" variant=\"h5\" color=\"primary\" component=\"h2\">\n                      {res.row_name}\n                    </Typography>\n                    <ChildList key={res.id} list={res} />\n                  </Container>\n                </section>\n              )\n            } else {\n              return null\n            }\n          })\n        }\n        {/*</Container>*/}\n      </React.Fragment>\n    );\n  }\n}\n\nclass ChildList extends React.Component {\n  render() {\n    const settings = {\n      dots: false,\n      infinite: false,\n      speed: 500,\n      slidesToShow: 4,\n      slidesToScroll: 4,\n      initialSlide: 0,\n      lazyLoad: true,\n      responsive: [\n        {\n          breakpoint: 1100,\n          settings: {\n            slidesToShow: 3,\n            slidesToScroll: 3,\n            infinite: true,\n            dots: true\n          }\n        },\n          {\n              breakpoint: 1024,\n              settings: {\n                  slidesToShow: 2,\n                  slidesToScroll: 2,\n                  infinite: true,\n                  dots: true\n              }\n          },\n        {\n          breakpoint: 900,\n          settings: {\n            slidesToShow: 1,\n            slidesToScroll: 1\n          }\n        }\n      ]\n    };\n    return (\n      <Slider {...settings}>\n        {\n          this.props.list.data.map(res => {\n            return (\n              <div className=\"post-container\" key={res.id}>\n                <Card>\n                  <CardActionArea>\n                    <GrandChildList link={res.id} key={res.id} list={res.images} />\n                  </CardActionArea>\n                  <CardActions>\n                    <Button size=\"small\">\n                      <Link to={{ pathname: `/detail/${res.id}` }}>{res.title}</Link>\n                    </Button>\n                  </CardActions>\n                </Card>\n              </div>\n            )\n          })\n        }\n      </Slider>\n    )\n  }\n}\n\nclass GrandChildList extends React.Component {\n  render() {\n    return (\n      <div>\n        <Link className=\"image\"\n          to={{\n            pathname: `/detail/${this.props.link}`\n          }}>\n          {\n            this.props.list.map(res => {\n              if (res.type === \"POSTER\") {\n                return (\n                  <CardMedia\n                    key={res.id}\n                    image={res.url}\n                    title={res.title}\n                    className=\"card-image\"\n                  />\n                )\n              } else {\n                return null\n              }\n            })\n          }\n        </Link>\n      </div>\n    )\n  }\n}\n\nexport default Home"]},"metadata":{},"sourceType":"module"}